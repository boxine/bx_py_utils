[project]
name = "bx_py_utils"
dynamic = ["version"]
description = "Various Python utility functions"
authors = [
    {name = 'Jens Diemer', email = 'jens.diemer@boxine.de'},
    {name = 'Philipp Hagemeister', email = 'phihag@phihag.de'},
    {name = 'Florian Braun', email = 'mail@chiron-online.de'},
    {name = 'Christian Schneider', email = 'christian@cnschn.com'},
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3 :: Only",
    "Intended Audience :: Developers",
]
license = {text = "MIT"}
keywords=["utilities"]
readme="README.md"
requires-python = ">=3.10,<4"

dependencies = []
[dependency-groups]
dev = [
    'boto3',  # needed for e.g.: bx_py_utils/aws/ stuff!
    'requests-mock',
    'beautifulsoup4',
    'lxml',
    'pdoc',  # https://pdoc.dev/
    'freezegun',  # https://github.com/spulec/freezegun
    'openpyxl',  # https://foss.heptapod.net/openpyxl/openpyxl
    'parameterized',  # https://github.com/wolever/parameterized

    'build', # https://github.com/pypa/build

    "manageprojects",  # https://github.com/jedie/manageprojects
    "urllib3", # for bx_py_utils.test_utils.deny_requests.deny_any_real_request() in tests
    "uv",  # https://github.com/astral-sh/uv
    "tox",  # https://github.com/tox-dev/tox
    "tox-uv",  # https://github.com/tox-dev/tox-uv
    "coverage",  # https://github.com/nedbat/coveragepy
    "autopep8",  # https://github.com/hhatto/autopep8
    "pyupgrade",  # https://github.com/asottile/pyupgrade
    "flake8",  # https://github.com/pycqa/flake8
    "flake8-bugbear",  # https://github.com/PyCQA/flake8-bugbear
    "pyflakes",  # https://github.com/PyCQA/pyflakes
    "codespell",  # https://github.com/codespell-project/codespell
    "EditorConfig",  # https://github.com/editorconfig/editorconfig-core-py
    "pip-audit",  # https://github.com/pypa/pip-audit
    "mypy",  # https://github.com/python/mypy
    "twine",  # https://github.com/pypa/twine
    "typeguard",  # https://github.com/agronholm/typeguard/

    # https://github.com/akaihola/darker
    # https://github.com/ikamensh/flynt
    # https://github.com/pycqa/isort
    # https://github.com/pygments/pygments
    'darker[flynt, isort, color]',
]


[project.urls]
Documentation = "https://github.com/boxine/bx_py_utils/"
Source = "https://github.com/boxine/bx_py_utils/"

[project.scripts]
bx_py_utils = "bx_py_utils.__main__:main"

[build-system]
requires = ["setuptools>=61.0", "setuptools_scm>=7.1"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["."]
include = ["bx_py_utils*"]

[tool.setuptools.dynamic]
version = {attr = "bx_py_utils.__version__"}


[tool.darker]
src = ["."]
revision = "origin/master..."
line_length = 119
color = true
skip_string_normalization = true
diff = false
check = false
stdout = false
isort = true
lint = []
log_level = "INFO"


[tool.isort]
# https://pycqa.github.io/isort/docs/configuration/config_files/#pyprojecttoml-preferred-format
atomic=true
profile="black"
line_length=120
known_first_party=["bx_py_utils", "bx_py_utils_tests"]
skip_glob=['.*', '*/htmlcov/*']
lines_after_imports=2


[tool.coverage.run]
branch = true
parallel = true
source = ['.']
concurrency = ["multiprocessing"]
command_line = "-m unittest --locals --verbose"

[tool.coverage.report]
omit = ['.*', '*/tests/*']
skip_empty = true
fail_under = 30
show_missing = true
exclude_lines = [
    'if self.debug:',
    'pragma: no cover',
    'raise NotImplementedError',
    'if __name__ == .__main__.:',
]


[tool.tox]  # https://tox.wiki/en/latest/config.html#pyproject-toml
isolated_build = true
env_list = ["3.13", "3.12", "3.11", "3.10"]
skip_missing_interpreters = true

[tool.tox.env_run_base]
runner = "uv-venv-lock-runner"
with_dev = true
commands = [
    ["python3", "-m", "coverage", "run", "--context", "'{envname}'"]
]


[tool.mypy]
warn_unused_configs = true
ignore_missing_imports = true
allow_redefinition = true  # https://github.com/python/mypy/issues/7165
show_error_codes = true
plugins = []
exclude = [".venv", "tests"]


[tool.bx_py_utils.doc_write]
search_paths = ['./bx_py_utils/', './bx_py_utils_tests/']
output_base_path = '.' # Current work dir -> project root
docstring_prefix = 'DocWrite:'


[manageprojects] # https://github.com/jedie/manageprojects
initial_revision = "1f3a70e"
initial_date = 2024-05-21T21:22:39+02:00
cookiecutter_template = "https://github.com/jedie/cookiecutter_templates/"
cookiecutter_directory = "make-uv-python"
applied_migrations = [
    "dee29ef", # 2024-07-09T16:06:43+02:00
    "e9e2dae", # 2024-11-14T17:59:23+01:00
]

[manageprojects.cookiecutter_context.cookiecutter]
full_name = "Jens Diemer"
github_username = "jedie"
author_email = "jens.diemer@boxine.de"
package_name = "bx_py_utils"
package_version = "71"
package_description = "Various Python utility functions"
package_url = "https://github.com/boxine/bx_py_utils"
issues_url = "https://github.com/boxine/bx_py_utils/issues"
license = "MIT"
_template = "https://github.com/jedie/cookiecutter_templates/"
