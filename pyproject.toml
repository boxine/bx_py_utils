[tool.poetry]
name = 'bx_py_utils'
version = "39"
description = 'Various Python utility functions'
authors = [
    'Jens Diemer <jens.diemer@boxine.de>',
    'Philipp Hagemeister <phihag@phihag.de>',
    'Florian Braun <mail@chiron-online.de>'
]
classifiers = [
    'Development Status :: 5 - Production/Stable',
    'Topic :: Software Development :: Libraries :: Python Modules',
    'Intended Audience :: Developers',
]
license = 'MIT'
keywords=['utilities']
readme='README.md'

[tool.poetry.dependencies]
python = '>=3.6,<4.0.0'

[tool.poetry.dev-dependencies]
boto3 = "*"  # needed for e.g.: bx_py_utils/aws/ stuff!
requests-mock = "*"
tox = '*'
pytest = '*'
pytest-randomly = '*'
pytest-cov = '*'
flake8 = '*'
flynt = '*'
autopep8 = '*'
isort = '*'
poetry-publish = "*"  # https://github.com/jedie/poetry-publish

# pdoc > 0.4.1 needs Python 3.7, but we still support 3.6,
# so we must install pdoc only with 3.7 or newer, to get a up-to-date version.
# The result is, that we can't generate the docs with Python 3.6, but this
# seems not to be a show stopper ;)
pdoc = { version = "*", python = ">=3.7" }  # https://pdoc.dev/

[tool.poetry.scripts]
publish = "bx_py_utils_tests.publish:publish"

[build-system]
requires = ['poetry>=0.12']
build-backend = 'poetry.masonry.api'


[tool.autopep8]
# https://github.com/hhatto/autopep8#pyprojecttoml
max_line_length = 120
exclude="*/htmlcov/*,*/migrations/*,*/volumes/*"


[tool.isort]
# https://pycqa.github.io/isort/docs/configuration/config_files/#pyprojecttoml-preferred-format
atomic=true
line_length=120
case_sensitive=false
skip_glob=["*/htmlcov/*","*/migrations/*"]
multi_line_output=3
include_trailing_comma=true
known_first_party=["bx_py_utils", "bx_py_utils_tests"]
no_lines_before="LOCALFOLDER"
default_section="THIRDPARTY"
sections=["FUTURE","STDLIB","THIRDPARTY","FIRSTPARTY","LOCALFOLDER"]
lines_after_imports=2


[tool.tox]
# https://tox.readthedocs.io/en/latest/example/basic.html#pyproject-toml-tox-legacy-ini
legacy_tox_ini = """
[tox]
isolated_build = True
envlist = py39,py38,py37,py36
skip_missing_interpreters = True

[testenv]
passenv = *
whitelist_externals = make
commands = make pytest-ci
"""
