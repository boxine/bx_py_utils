[tool.poetry]
name = "bx_py_utils"
version = "72"
description = "Various Python utility functions"
homepage = "https://github.com/boxine/bx_py_utils/"
authors = [
    "Jens Diemer <jens.diemer@boxine.de>",
    "Philipp Hagemeister <phihag@phihag.de>",
    "Florian Braun <mail@chiron-online.de>"
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3 :: Only",
    "Intended Audience :: Developers",
]
license = "MIT"
keywords=["utilities"]
include = ["LICENSE", "README.md"]
readme="README.md"
packages = [{ include = "bx_py_utils" }]
[tool.poetry.urls]
"Bug Tracker" = "https://github.com/boxine/bx_py_utils/issues"


[tool.poetry.dependencies]
python = ">=3.9,<4.0.0"

[tool.poetry.dev-dependencies]
boto3 = "*"  # needed for e.g.: bx_py_utils/aws/ stuff!
requests-mock = "*"
tox = "*"
pytest = "*"
pytest-randomly = "*"
pytest-cov = "*"
pytest-django = "*"
pytest-darker = "*"  # https://github.com/akaihola/pytest-darker
darker = "*"  # https://github.com/akaihola/darker
flake8 = "*"
isort = "*"
mypy = "*"  # https://github.com/python/mypy
poetry-publish = "*"  # https://github.com/jedie/poetry-publish
beautifulsoup4 = "*"
lxml = "*"
pdoc = "*"  # https://pdoc.dev/

[tool.poetry.scripts]
publish = "bx_py_utils_tests.publish:publish"

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"


[tool.darker]
src = ["."]
revision = "origin/master..."
line_length = 100
verbose = true
skip_string_normalization = true
diff = false
check = false
stdout = false
isort = true
lint = [
    "flake8",
]
log_level = "INFO"


[tool.isort]
# https://pycqa.github.io/isort/docs/configuration/config_files/#pyprojecttoml-preferred-format
atomic=true
profile="black"
line_length=120
skip_glob=[".*","*/htmlcov/*","*/migrations/*"]
known_first_party=["bx_py_utils", "bx_py_utils_tests"]
lines_after_imports=2


[tool.coverage.run]
omit=[".*"]


[tool.pytest.ini_options]
# https://docs.pytest.org/en/latest/customize.html#pyproject-toml
minversion = "6.0"
norecursedirs = ".* __pycache__ coverage* dist htmlcov"
# sometimes helpfull "addopts" arguments:
#    -vv
#    --verbose
#    --capture=no
#    --trace-config
#    --full-trace
#    -p no:warnings
addopts = """
    --cov=.
    --cov-report term-missing
    --no-cov-on-fail
    --showlocals
    --darker
    --doctest-modules
    --failed-first
    --last-failed-no-failures all
    --new-first
    -p no:randomly
"""


[tool.tox]
# https://tox.readthedocs.io/en/latest/example/basic.html#pyproject-toml-tox-legacy-ini
legacy_tox_ini = """
[tox]
isolated_build = True
envlist = py{39,310,311}
skip_missing_interpreters = True

[testenv]
passenv = *
allowlist_externals =
    poetry
commands =
    python --version
    poetry run pytest
"""


[tool.mypy]
warn_unused_configs = true
ignore_missing_imports = true
allow_redefinition = true  # https://github.com/python/mypy/issues/7165
show_error_codes = true
plugins = []
exclude = [".venv", "tests"]


[manageprojects] # https://github.com/jedie/manageprojects
initial_revision = "baf1ebc"
initial_date = 2022-11-30T21:19:10+01:00
cookiecutter_template = "https://github.com/jedie/cookiecutter_templates/"
cookiecutter_directory = "poetry-python"

[manageprojects.cookiecutter_context.cookiecutter]
full_name = "Jens Diemer"
github_username = "jedie"
author_email = "jens.diemer@boxine.de"
package_name = "bx_py_utils"
package_version = "71"
package_description = "Various Python utility functions"
package_url = "https://github.com/boxine/bx_py_utils"
issues_url = "https://github.com/boxine/bx_py_utils/issues"
license = "MIT"
_template = "https://github.com/jedie/cookiecutter_templates/"
